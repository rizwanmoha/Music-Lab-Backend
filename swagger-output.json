{
  "swagger": "2.0",
  "info": {
    "title": "Music Labs API",
    "description": "This is the API Documentation for the Music Labs Application. The Backend relies on Express for routing, MongoDB for Database and JWT for Authentication along with cloudinary for image and video storage",
    "version": "1.0.0"
  },
  "host": "localhost:8000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/test": {
      "get": {
        "tags": [
          "Testing"
        ],
        "description": "This is a Test route to check health of Server",
        "responses": {
          "200": {
            "description": "Server Running",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "This is Working"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/user/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Register New Users To the Platform",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Email and Password",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "Harshit"
                },
                "lastName": {
                  "type": "string",
                  "example": "Chauhan"
                },
                "email": {
                  "type": "string",
                  "example": "harshit.c21@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "MeraPassword"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Registration Successful",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Registration Successfully"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request - User already exists",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "User already exists. Please login."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Conflict - Missing or incomplete user details",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "string",
                  "example": "false"
                },
                "message": {
                  "type": "string",
                  "example": "Please fill all the details."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Error while registering."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/user/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Logs New Users To the Platform",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Email and Password",
            "schema": {
              "$ref": "#/definitions/EmailPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Succussful",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Login Successfully"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "token": {
                  "type": "string",
                  "example": "auth-adjasdlasldsadlkasdsda"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Teacher Not Approved By Admin",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Teacher is not approved contact to admin"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Login Failed",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "User Not Registered"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Form Validation Failed",
            "schema": {
              "$ref": "#/definitions/FormValidationError"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "Not Implemented"
          }
        }
      }
    },
    "/api/v1/user/google": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Google Login Route, allows user to login with their google account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Google sign-in details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "harshit.c21@iiits.in"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sign in Successful",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Sign in Successful"
                },
                "teacher": {
                  "$ref": "#/definitions/Teacher"
                },
                "token": {
                  "type": "string",
                  "example": "Bearersaiasd-asdasmdkasnd-asdnda"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized - User not found with the provided email",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "User not found with email address"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Form Validation Failed",
            "schema": {
              "$ref": "#/definitions/FormValidationError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/user/forgot": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Forgot Password Route, allows user to reset their password with their email address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Password reset details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailPassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Password Updated Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Password updated successfully"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found - User not found with the provided email",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "User not found with this email id"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Form Validation Failed",
            "schema": {
              "$ref": "#/definitions/FormValidationError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Error while updating the password"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/user/wishlist": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Gets a Users Wishlist using their ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Wishlist fetched successfully",
            "schema": {
              "type": "object",
              "properties": {
                "wishlist": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "courseId": {
                        "type": "string",
                        "example": "65d7c494c44cec15f9adf35d"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "UnAuthorized Access",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "404": {
            "description": "Not Found - User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "User not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/user/your-courses/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Gets a Users Courses using their ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Courses retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "courses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "course": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "65d7c494c44cec15f9adf35c"
                          },
                          "title": {
                            "type": "string",
                            "example": "Sample Course A"
                          },
                          "description": {
                            "type": "string",
                            "example": "This is a sample course description"
                          }
                        }
                      },
                      "sections": {
                        "type": "array",
                        "example": [],
                        "items": {}
                      },
                      "teacher": {
                        "$ref": "#/definitions/Teacher"
                      },
                      "rating": {
                        "type": "number",
                        "example": 4.5
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "UnAuthorized Access",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "404": {
            "description": "Not Found - User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "User not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/user/add-to-wl": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Adds a Course to the Wishlist",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Course ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "courseId": {
                  "type": "string",
                  "example": "65d7c494c44cec15f9adf35c"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course added to wishlist successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Course added to wishlist"
                },
                "course": {
                  "type": "string",
                  "example": "65d7c494c44cec15f9adf35c"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request - Course already in wishlist",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Course already in wishlist"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "UnAuthorized Access",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "404": {
            "description": "Not Found - User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "User not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/user/remove-wishlist": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Removes a Course from the Wishlist",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Course ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "courseId": {
                  "type": "string",
                  "example": "65d7c494c44cec15f9adf35c"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course removed from wishlist successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "The respective course is removed from the wishlist"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request - Course not in wishlist",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Course not in wishlist"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "UnAuthorized Access",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "404": {
            "description": "Not Found - User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "User not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/user/purchase": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Purchases a Course",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Course ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "courseId": {
                  "type": "string",
                  "example": "65d7c494c44cec15f9adf35c"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course purchased successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Course purchased successfully"
                },
                "course": {
                  "type": "string",
                  "example": "65d7c494c44cec15f9adf35c"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request - Course already purchased",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Course already purchased, refund initiated"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "UnAuthorized Access",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "404": {
            "description": "Not Found - User or course not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "User not found or Course not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/user/course/progress": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Updates the Progress of a Course",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Course and video details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "courseId": {
                  "type": "string",
                  "example": "65d7c494c44cec15f9adf35c"
                },
                "videoId": {
                  "type": "string",
                  "example": "789def012345abcde67890fg"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course progress updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "All Good"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "UnAuthorized Access",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "404": {
            "description": "Not Found - User, course, or video not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "User not found, Course not found, or Video not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/user/course/get-progress": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Gets the Progress of a Course",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "courseId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "UnAuthorized Access",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/user/contactus": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Creates a Query",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Query details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john.doe@example.com"
                },
                "message": {
                  "type": "string",
                  "example": "This is a sample query message"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Query submitted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Query Submitted Successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing required fields",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Please fill all the fields"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/user/instructorData": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Gets all the Instructors",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/user/teacher/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Gets a Teacher and their Courses",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/user/teachereditprofile/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Updates the Profile of a Teacher",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "username": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "location": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "education": {
                  "example": "any"
                },
                "experience": {
                  "example": "any"
                },
                "achievement": {
                  "example": "any"
                },
                "avatar": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/user/studenteditprofile/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update The Profile of a Student",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "username": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "location": {
                  "example": "any"
                },
                "specialization": {
                  "example": "any"
                },
                "bio": {
                  "example": "any"
                },
                "genres": {
                  "example": "any"
                },
                "upcomingperformance": {
                  "example": "any"
                },
                "avatar": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/user/dashboardteacherprofile/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/user/studentprofile/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/create-order": {
      "post": {
        "tags": [
          "Payment"
        ],
        "description": "Create RazorPay Order for Payment Gateway Facilitation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment order created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "order_id"
                },
                "entity": {
                  "type": "string",
                  "example": "order_entity"
                },
                "amount": {
                  "type": "string",
                  "example": "order_amount"
                },
                "currency": {
                  "type": "string",
                  "example": "order_currency"
                },
                "receipt": {
                  "type": "string",
                  "example": "order_receipt"
                },
                "status": {
                  "type": "string",
                  "example": "order_status"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/teacher/register": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "resume": {
                  "example": "any"
                },
                "postGraduation": {
                  "example": "any"
                },
                "achievement": {
                  "example": "any"
                },
                "experience": {
                  "example": "any"
                },
                "masters": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/teacher/lsitofteachersrequest": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "description": "Get List of Teachers Request",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of teachers retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "List of all Teachers Accept request"
                },
                "teachers": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Teacher"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          },
          "502": {
            "description": "Bad Gateway - Cache retrieval error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Something Went Wrong with the Cache"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/teacher/acceptrequest/{id}": {
      "put": {
        "tags": [
          "Teacher"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Teacher ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Teacher request updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Teacher request updated successfully"
                },
                "teacher": {
                  "$ref": "#/definitions/Teacher"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found - Teacher not found with the specified ID",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Teacher not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/teacher/ignorerequest/{id}": {
      "delete": {
        "tags": [
          "Teacher"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Teacher request deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Teacher request deleted successfully"
                },
                "teacher": {
                  "$ref": "#/definitions/Teacher"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found - Teacher not found with the specified ID",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Teacher not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/teacher/teacher/studentlist/{id}": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "description": "Get Student List of a particular teacher",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/teacher/teacherdashboard/student/{id}": {
      "delete": {
        "tags": [
          "Teacher"
        ],
        "description": "Delete Student from Teacher Dashboard",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/teacher/teacher/numberofstudent/{id}": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "description": "Get Number of Students",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/teacher/teacher/noofcourseandcoursewithcategory/{id}": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "description": "Get Number of Courses and Courses with Category",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/teacher/teacher/earnmoney/{id}": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "description": "Get Total Earned Money",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/teacher/getTeacher/{id}": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "description": "Get Single Teacher",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/teacher/teacher/studentcomment/{id}": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "description": "Get Student Comments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/course/get-signature": {
      "get": {
        "tags": [
          "Course"
        ],
        "description": "Get Signature for Uploading Image on Cloudinary, Required for Uploading Image",
        "responses": {
          "200": {
            "description": "Signature generated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "signature": {
                  "type": "string",
                  "example": "cloudinary_signature"
                },
                "timestamp": {
                  "type": "string",
                  "example": "12/07/2024:13:03:22PM"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/course/createcourse": {
      "post": {
        "tags": [
          "Course"
        ],
        "description": "Create A New Course",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                },
                "category": {
                  "example": "any"
                },
                "instructor": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Course created successfully"
                },
                "course": {
                  "$ref": "#/definitions/Course"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Invalid input data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "UnAuthorized Access",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "404": {
            "description": "Not Found - Teacher not found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Teacher not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/course/ratecourse": {
      "post": {
        "tags": [
          "Course"
        ],
        "description": "Rate the Course",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Course ID and new rating",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "courseId": {
                  "type": "string",
                  "example": "65d278b7342ef66267b5bb9b"
                },
                "newRating": {
                  "type": "string",
                  "example": "4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "rating": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "string",
                      "example": "2ef662b72675d34b5b78b9"
                    },
                    "courseId": {
                      "type": "string",
                      "example": "5d278b7342ef66267b5bb9"
                    },
                    "rating": {
                      "type": "string",
                      "example": "4"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "UnAuthorized Access",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "501": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/course/getCourseRating/{id}": {
      "get": {
        "tags": [
          "Course"
        ],
        "description": "Gets the Rating of the Course",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "in": "path",
            "description": "Course ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "b72675d34b34b34b5b"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "ratings": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string",
                      "example": "12"
                    },
                    "value": {
                      "type": "string",
                      "example": "3.4"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "501": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/course/add-comment": {
      "post": {
        "tags": [
          "Course"
        ],
        "description": "Adds New Comment to the Course",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "courseId": {
                  "example": "any"
                },
                "comment": {
                  "example": "any"
                },
                "userId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment added successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Comment added successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found - Course not found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Course not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/course/get-comments": {
      "post": {
        "tags": [
          "Course"
        ],
        "description": "Gets All Comments of the Course",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "courseId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comments Fetched Successfully",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/course/addcontent": {
      "post": {
        "tags": [
          "Course"
        ],
        "description": "Adds New Video Content to the Course",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "sectionId": {
                  "example": "any"
                },
                "videoName": {
                  "example": "any"
                },
                "videoUrl": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "UnAuthorized Access",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/course/deletevideo": {
      "post": {
        "tags": [
          "Course"
        ],
        "description": "Delete Video Content to the Course",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "videoId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/course/editVideoTitle": {
      "post": {
        "tags": [
          "Course"
        ],
        "description": "Edit Video Title Handler",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "lessonId": {
                  "example": "any"
                },
                "newName": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/course/addsection": {
      "post": {
        "tags": [
          "Course"
        ],
        "description": "Adds New Section in the Course",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "courseId": {
                  "example": "any"
                },
                "sectionName": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/course/editsection": {
      "post": {
        "tags": [
          "Course"
        ],
        "description": "Edits Section Title in the Course",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "sectionId": {
                  "example": "any"
                },
                "newName": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/course/deletesection": {
      "post": {
        "tags": [
          "Course"
        ],
        "description": "Deletes Section from the Course",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "sectionId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/course/description/{courseId}": {
      "get": {
        "tags": [
          "Course"
        ],
        "description": "Gets the Description of the Course",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/course/{courseId}": {
      "get": {
        "tags": [
          "Course"
        ],
        "description": "Gets the Information of the Course",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/course/singlecourse/{id}": {
      "get": {
        "tags": [
          "Course"
        ],
        "description": "Gets the Information of a single Course in complete detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/course/get-signaturecourseId": {
      "get": {
        "description": "Get Signature for Uploading Image on Cloudinary, Required for Uploading Image",
        "responses": {
          "200": {
            "description": "Signature generated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "signature": {
                  "type": "string",
                  "example": "cloudinary_signature"
                },
                "timestamp": {
                  "type": "string",
                  "example": "12/07/2024:13:03:22PM"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/query": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Gets All Contact Us Queries",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/admin/teacheruniversalSearch": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Gets All Teachers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/admin/universalSearch": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Search All Users",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/admin/allcourses": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Get All Courses From The Database",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/admin/allcategories": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Get All Categories From The Database",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/admin/deletecategories/{id}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "description": "Delete A Category",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/admin/create-category": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Create A New Category",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/admin/getpurchases": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Get All Purchases From The Database",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/admin/custom": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Get All Purchases From The Database",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "Harshit"
        },
        "lastName": {
          "type": "string",
          "example": "Chauhan"
        },
        "email": {
          "type": "string",
          "example": "test@email.com"
        },
        "password": {
          "type": "string",
          "example": "$2b$10$ZAdSkEDp0zT1r9zUJ/Y/HuNJkOKkPrePn3UPk6eCxiMGb9a/rTDW"
        },
        "role": {
          "type": "string",
          "example": "User"
        },
        "wishlist": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "_id": {
          "type": "string",
          "example": "65d09daa60a9d925c87a6a0c"
        },
        "courses": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "createdAt": {
          "type": "string",
          "example": "2024-04-29T19:57:53.187Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2024-04-29T19:57:53.187Z"
        }
      }
    },
    "Teacher": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "Harshit"
        },
        "lastName": {
          "type": "string",
          "example": "Chauhan"
        },
        "email": {
          "type": "string",
          "example": "test@email.com"
        },
        "password": {
          "type": "string",
          "example": "$2b$10$ZAdSkEDp0zT1r9zUJ/Y/HuNJkOKkPrePn3UPk6eCxiMGb9a/rTDW"
        },
        "role": {
          "type": "string",
          "example": "Teacher"
        },
        "courses": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "_id": {
          "type": "string",
          "example": "65d09daa60a9d925c87a6a0c"
        },
        "createdAt": {
          "type": "string",
          "example": "2024-04-29T19:57:53.187Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2024-04-29T19:57:53.187Z"
        }
      }
    },
    "EmailPassword": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "harshit@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "MeraPassword"
        }
      }
    },
    "Wishlist": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65d09daa60a9d925c87a6a0c"
          },
          "course": {
            "type": "string",
            "example": "65d7bfcef6e43a005af95bb5"
          },
          "user": {
            "type": "string",
            "example": "65d09daa60a9d925c87a6a0c"
          }
        }
      }
    },
    "UnauthorizedError": {
      "type": "object",
      "properties": {
        "success": {
          "type": "string",
          "example": "false"
        },
        "error": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "JsonWebTokenError"
            },
            "message": {
              "type": "string",
              "example": "jwt malformed"
            }
          }
        },
        "message": {
          "type": "string",
          "example": "Unauthorized Access"
        }
      }
    },
    "FormValidationError": {
      "type": "object",
      "properties": {
        "success": {
          "type": "string",
          "example": "false"
        },
        "message": {
          "type": "string",
          "example": "Please fill all the details "
        }
      }
    },
    "InternalServerError": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "message": {
          "type": "string",
          "example": "Something Went Wrong, Please Try Again!"
        }
      }
    },
    "Course": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "65d278b7342ef66267b5bb9b"
        },
        "title": {
          "type": "string",
          "example": "Rock in 5 Days"
        },
        "description": {
          "type": "string",
          "example": "Course Description"
        },
        "price": {
          "type": "number",
          "example": 1200
        },
        "category": {
          "type": "string",
          "example": "Rock"
        },
        "teacher": {
          "type": "string",
          "example": "t65d278b7342eadsh85bb9b"
        },
        "imageUrl": {
          "type": "string",
          "example": "https://example.com/course-image.jpg"
        },
        "sections": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "createdAt": {
          "type": "string",
          "example": "2024-02-03T14:57:48.561Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2024-02-03T14:58:19.598Z"
        }
      }
    },
    "Rating": {
      "type": "object",
      "properties": {
        "Rating": {
          "type": "number",
          "example": 5
        },
        "userId": {
          "type": "string",
          "example": "a65d09daa60jad12dasndad"
        },
        "courseId": {
          "type": "string",
          "example": "65d7bfcef6e43a005af95bb5"
        }
      }
    },
    "Comments": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "example": "Wow this is an Amazing Course"
          },
          "userId": {
            "type": "string",
            "example": "65d09daa60a9d925c87a6a0c"
          },
          "courseId": {
            "type": "string",
            "example": "65d7bfcef6e43a005af95bb5"
          }
        }
      }
    }
  }
}